---
import Logo from '../assets/icones/logo.svg';
import IconSearch from '../assets/icones/icon_search.svg';
---

<header 
  class="px-6 py-4 fixed z-10 w-full flex items-stretch justify-between transition-all duration-300 ease-in-out lg:py-0 lg:bg-white"
  id="header">
    <div class="flex items-center relative z-20">
      <a href="/" aria-label="Accueil">
        <Logo/>
      </a>
    </div>

    <div class="flex items-center gap-4 lg:flex-row-reverse">
      <button class="w-12 flex justify-center" aria-label="Recherche">
        <IconSearch />
      </button>

      <button 
        class="group relative z-20 flex h-6 w-8 flex-col justify-between *:h-[2px] *:w-full *:bg-white *:transition-all *:duration-300 *:ease lg:hidden"
        id="menu-btn"
        aria-label="Menu"
        aria-controls="menu"
        aria-expanded="false"
      >
        <span class="group-aria-expanded:translate-y-[10.5px] group-aria-expanded:rotate-45"></span>
        <span class="group-aria-expanded:opacity-0"></span>
        <span class="group-aria-expanded:-translate-y-[10.5px] group-aria-expanded:-rotate-45"></span>
      </button>

      <nav 
        class="visible fixed z-10 inset-0 bg-(--color-indigo) text-2xl text-white opacity-100 transition-all duration-300 ease-in-out max-lg:aria-hidden:invisible max-lg:aria-hidden:opacity-0 lg:relative lg:flex lg:items-center lg:bg-transparent lg:text-sm lg:font-bold lg:uppercase lg:tracking-wide lg:text-black lg:opacity-100"
        id="menu"
        aria-hidden="true"
      >
        <ul class="mt-[25vh] mx-16 lg:m-0 lg:flex *:relative *:overflow-hidden *:lg:before:absolute *:lg:before:bottom-0 *:lg:before:left-0 *:lg:before:h-2 *:lg:before:w-full *:lg:before:translate-y-2 *:lg:before:bg-black *:lg:before:transition-all *:lg:before:duration-300 *:lg:before:ease-in-out *:lg:hover:before:translate-y-0">
          <li>
            <a class="block px-5 py-4 lg:py-8" href="/conservatoire">Le conservatoire</a>
          </li>
          <li>
            <a class="block px-5 py-4 lg:py-8" href="/enseignements">Enseignements</a>
          </li>
          <li>
            <a class="block px-5 py-4 lg:py-8" href="/agenda">Agenda</a>
          </li>
          <li>
            <a class="block px-5 py-4 lg:py-8" href="/contact">Contact</a>
          </li>
          <li>
            <a class="block px-5 py-4 lg:py-8 lg:bg-black lg:text-white lg:px-8" href="/inscription">S'inscrire</a>
          </li>
        </ul>
      </nav>
    </div>
  </header>
  
  <script>
  // On cible les éléments à modifier
  const toggle = document.querySelector("#menu-btn");
  const nav = document.querySelector("#menu");
  const page = document.body;

  // Vérifier si les éléments existent avant d'ajouter l'événement
  if (toggle && nav) {
    toggle.addEventListener("click", () => {
      const isOpen = toggle.ariaExpanded === "true";
      const isClosed = !isOpen;
      // Mise à jour des attributs ARIA pour accessibilité
      toggle.ariaExpanded = String(isClosed);
      nav.ariaHidden = String(isOpen);
      page.classList.toggle("noscroll", isClosed);
    });
  }

  /*------------------------------------*\
    # MASQUER LE HEADER AU SCROLL
  \*------------------------------------*/

  const navBar = document.querySelector("#header");
  let lastScrollY = window.scrollY; // Position précédente du défilement
  let ticking = false; // Pour éviter trop de calculs inutiles
  const offset = 205; // Distance avant de cacher/montrer la barre

  function handleScroll() {
    const currentScrollY = window.scrollY;

    // Ajouter une classe quand on dépasse 205px
    if (currentScrollY > offset) {
      navBar.classList.add("bg-white");
    } else {
      navBar.classList.remove("bg-white");
    }

    if (currentScrollY > lastScrollY && currentScrollY > offset) {
      // Vers le bas et dépassé l'offset
      navBar.classList.add("-translate-y-full");
    } else if (currentScrollY < lastScrollY || currentScrollY <= offset) {
      // Vers le haut ou revenu en haut de la page
      navBar.classList.remove("-translate-y-full");
    }

    lastScrollY = currentScrollY;
    ticking = false; // Permet de relancer l'écoute
  }

  // Ajout de l'écouteur de défilement avec throttle
  window.addEventListener("scroll", () => {
    if (!ticking) {
      window.requestAnimationFrame(handleScroll);
      ticking = true;
    }
  });
  </script>